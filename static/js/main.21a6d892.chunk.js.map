{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/Loader/Loader.jsx","services/pixabayApi.js","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/ImageGallery/ImageGallery.jsx","App.js","index.js"],"names":["SearchBar","props","useState","stateSearchQuery","setStateSearchQuery","className","onSubmit","event","preventDefault","trim","toast","error","type","autoComplete","autoFocus","placeholder","value","onChange","target","LoaderReact","color","height","width","timeout","api","getData","query","page","per_page","BASE_URL","API_KEY","url","fetch","then","response","ok","json","Promise","reject","Error","ImageGalleryItem","imageQuery","openModal","map","id","webformatURL","largeImageURL","tags","onClick","src","alt","Button","onPushButton","modalRoot","document","querySelector","Modal","useEffect","window","addEventListener","handleOnKeyDown","removeEventListener","code","closeModal","createPortal","currentTarget","largeImage","ImageGallery","stateImages","setStateImages","stateLargeImage","setStateLargeImage","stateShowModal","setStateShowModal","stateIsLoading","setStateIsLoading","fetchImages","setTimeout","pixabayApi","searchQuery","data","hits","prevState","scrollTo","top","documentElement","scrollHeight","behavior","finally","setPage","length","App","statePage","setStatePage","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.21a6d892.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { toast } from 'react-toastify';\n\nexport default function SearchBar(props) {\n  const [stateSearchQuery, setStateSearchQuery] = useState('');\n\n  const handleQueryChange = event => {\n    setStateSearchQuery(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (stateSearchQuery.trim() === '') {\n      toast.error('Enter the name of your picture theme');\n      return;\n    }\n    props.onSubmit(stateSearchQuery, 1);\n    setStateSearchQuery('');\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"on\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={stateSearchQuery}\n          onChange={handleQueryChange}\n        />\n      </form>\n    </header>\n  );\n}\n","import Loader from 'react-loader-spinner';\n\nexport default function LoaderReact() {\n  return (\n    <Loader\n      type=\"Grid\"\n      color=\"#00BFFF\"\n      height={80}\n      width={80}\n      timeout={5000}\n      className=\"loader\"\n    />\n  );\n}\n\n","function getData(query, page, per_page = 12) {\n  const BASE_URL = 'https://pixabay.com/api/';\n  const API_KEY = '11753469-fae5ae7c0c549b8c5c7373ba2';\n  const url = `${BASE_URL}?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${per_page}`;\n  return fetch(url).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(\n      new Error(`Нет изображений по вашему запросу ${query}`),\n    );\n  });\n}\n\nconst api = { getData };\n\nexport default api;\n\n// .finally(() => this.setState({ loading: false }));\n//   axios\n//     .get(url)\n//     .then(fetchData => this.setState({ images: fetchData.data.hits }))\n//     .catch(error => this.setState({ error }))\n//     .finally(() => this.setState({ loading: false }));\n","import PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({ imageQuery, openModal }) => {\n  return (\n    <>\n      {imageQuery.map(({ id, webformatURL, largeImageURL, tags }) => (\n        <li\n          className=\"ImageGalleryItem\"\n          key={id}\n          onClick={() => openModal(largeImageURL)}\n        >\n          <img\n            src={webformatURL}\n            alt={tags}\n            className=\"ImageGalleryItem-image\"\n          />\n        </li>\n      ))}\n    </>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  imageQuery: PropTypes.arrayOf(\n    PropTypes.shape({\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    }),\n  ),\n  openModal: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\n\nconst Button = ({ onPushButton }) => {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={onPushButton}>\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onPushButton: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal(props) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleOnKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleOnKeyDown);\n    };\n  });\n\n  const handleOnKeyDown = event => {\n    if (event.code === 'Escape') {\n      props.closeModal();\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      props.closeModal();\n    }\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\n      <div className=\"Modal\">\n        <img src={props.largeImage} alt=\"\" />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  largeImage: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n","import { Fragment, useState, useEffect } from 'react';\nimport Loader from '../Loader';\nimport pixabayApi from '../../services/pixabayApi';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport Button from '../Button';\nimport Modal from '../Modal';\n\nexport default function ImageGallery(props) {\n  const [stateImages, setStateImages] = useState([]);\n  const [stateLargeImage, setStateLargeImage] = useState('');\n  const [stateShowModal, setStateShowModal] = useState(false);\n  const [stateIsLoading, setStateIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (props.searchQuery) {\n      setStateImages([]);\n      fetchImages();\n    }\n  }, [props.searchQuery]);\n\n  function fetchImages() {\n    setStateIsLoading(true);\n\n    setTimeout(() => {\n      pixabayApi\n        .getData(props.searchQuery, props.page)\n        .then(data => {\n          if (props.page === 1) {\n            setStateImages(data.hits);\n          } else {\n            setStateImages(prevState => [...prevState, ...data.hits]);\n            window.scrollTo({\n              top: document.documentElement.scrollHeight,\n              behavior: 'smooth',\n            });\n          }\n        })\n        .finally(() => {\n          setStateIsLoading(false);\n          props.setPage(prevState => prevState + 1);\n        });\n    }, 200);\n  }\n\n  const openModal = largeImage => {\n    setStateShowModal(true);\n    setStateLargeImage(largeImage);\n  };\n\n  const closeModal = () => {\n    setStateShowModal(false);\n    setStateLargeImage('');\n  };\n\n  return (\n    <Fragment>\n      <ul className=\"ImageGallery\">\n        <ImageGalleryItem imageQuery={stateImages} openModal={openModal} />\n      </ul>\n      {stateImages.length === 0 && (\n        <p>{`No images for your request \"${props.searchQuery}\"`}</p>\n      )}\n      {stateShowModal && (\n        <Modal closeModal={closeModal} largeImage={stateLargeImage} />\n      )}\n      {stateIsLoading && <Loader />}\n      {stateImages.length > 0 && <Button onPushButton={fetchImages} />}\n    </Fragment>\n  );\n}\n","import { useState } from 'react';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport SearchBar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\n\nexport default function App() {\n  const [stateSearchQuery, setStateSearchQuery] = useState('');\n  const [statePage, setStatePage] = useState(1);\n\n  const handleFormSubmit = (searchQuery, page) => {\n    setStateSearchQuery(searchQuery);\n    setStatePage(page);\n  };\n\n  return (\n    <div>\n      <SearchBar onSubmit={handleFormSubmit} />\n      <ToastContainer autoClose={3000} />\n      <ImageGallery\n        searchQuery={stateSearchQuery}\n        page={statePage}\n        setPage={setStatePage}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}